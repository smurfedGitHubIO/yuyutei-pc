import { c as create_ssr_component, g as add_attribute } from "./ssr.js";
import "./client.js";
const css = {
  code: ".search-container.svelte-1cp2z2g.svelte-1cp2z2g{position:relative;width:100%;max-width:600px;margin:0 auto}.search-box.svelte-1cp2z2g.svelte-1cp2z2g{display:flex;align-items:center;background-color:white;border:2px solid var(--gold-primary);border-radius:var(--radius-md);overflow:hidden;box-shadow:0 4px 12px rgba(0, 0, 0, 0.1)}input.svelte-1cp2z2g.svelte-1cp2z2g{flex:1;padding:var(--space-2);border:none;outline:none;font-size:1rem;font-family:var(--font-body)}.search-button.svelte-1cp2z2g.svelte-1cp2z2g{background-color:var(--gold-primary);color:var(--dark);padding:var(--space-2);border:none;cursor:pointer;display:flex;align-items:center;justify-content:center}.search-results.svelte-1cp2z2g.svelte-1cp2z2g{position:absolute;top:100%;left:0;width:100%;background-color:white;border:2px solid var(--gold-dark);border-top:none;border-radius:0 0 var(--radius-md) var(--radius-md);box-shadow:0 4px 12px rgba(0, 0, 0, 0.1);z-index:10;max-height:400px;overflow-y:auto}.search-results.svelte-1cp2z2g ul.svelte-1cp2z2g{list-style:none;margin:0;padding:0}.result-item.svelte-1cp2z2g.svelte-1cp2z2g{display:flex;align-items:center;padding:var(--space-2);border-bottom:1px solid var(--gray-light);width:100%;text-align:left;background:none;cursor:pointer;transition:background-color var(--transition-fast)}.result-item.svelte-1cp2z2g.svelte-1cp2z2g:hover{background-color:var(--gold-light)}.result-image.svelte-1cp2z2g.svelte-1cp2z2g{width:60px;height:60px;object-fit:cover;border-radius:var(--radius-sm);margin-right:var(--space-2)}.result-content.svelte-1cp2z2g.svelte-1cp2z2g{flex:1}.result-content.svelte-1cp2z2g h4.svelte-1cp2z2g{margin:0 0 4px;font-size:1rem}.result-content.svelte-1cp2z2g p.svelte-1cp2z2g{margin:0;font-size:0.9rem;color:var(--gray)}.no-results.svelte-1cp2z2g.svelte-1cp2z2g{padding:var(--space-2);text-align:center;color:var(--gray)}",
  map: '{"version":3,"file":"SearchBar.svelte","sources":["SearchBar.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { goto } from \\"$app/navigation\\";\\nimport { infrastructures } from \\"$lib/data/infrastructures\\";\\nimport { onMount } from \\"svelte\\";\\nimport { fade } from \\"svelte/transition\\";\\nlet searchTerm = \\"\\";\\nlet results = [];\\nlet isResultsVisible = false;\\nlet searchInput;\\nfunction search() {\\n  if (searchTerm.length < 2) {\\n    results = [];\\n    isResultsVisible = false;\\n    return;\\n  }\\n  const term = searchTerm.toLowerCase();\\n  results = infrastructures.filter(\\n    (infra) => infra.name.toLowerCase().includes(term) || infra.location.toLowerCase().includes(term) || infra.description.toLowerCase().includes(term)\\n  );\\n  isResultsVisible = true;\\n}\\nfunction handleSelect(slug) {\\n  searchTerm = \\"\\";\\n  isResultsVisible = false;\\n  goto(`/infrastructure/${slug}`);\\n}\\nfunction handleClickOutside(event) {\\n  if (isResultsVisible && !event.composedPath().includes(searchInput)) {\\n    isResultsVisible = false;\\n  }\\n}\\nonMount(() => {\\n  document.addEventListener(\\"click\\", handleClickOutside);\\n  return () => {\\n    document.removeEventListener(\\"click\\", handleClickOutside);\\n  };\\n});\\n<\/script>\\n\\n<div class=\\"search-container\\">\\n  <div class=\\"search-box\\">\\n    <input\\n      bind:this={searchInput}\\n      bind:value={searchTerm}\\n      on:input={search}\\n      type=\\"text\\"\\n      placeholder=\\"Search historic infrastructures...\\"\\n      aria-label=\\"Search infrastructures\\"\\n    />\\n    <button class=\\"search-button\\" aria-label=\\"Search\\">\\n      <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"20\\" height=\\"20\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\">\\n        <circle cx=\\"11\\" cy=\\"11\\" r=\\"8\\"></circle>\\n        <line x1=\\"21\\" y1=\\"21\\" x2=\\"16.65\\" y2=\\"16.65\\"></line>\\n      </svg>\\n    </button>\\n  </div>\\n  \\n  {#if isResultsVisible && results.length > 0}\\n    <div class=\\"search-results\\" transition:fade={{ duration: 200 }}>\\n      <ul>\\n        {#each results as result}\\n          <li>\\n            <button on:click={() => handleSelect(result.slug)} class=\\"result-item\\">\\n              <img src={result.images[0]} alt={result.name} class=\\"result-image\\" />\\n              <div class=\\"result-content\\">\\n                <h4>{result.name}</h4>\\n                <p>{result.location}</p>\\n              </div>\\n            </button>\\n          </li>\\n        {/each}\\n      </ul>\\n    </div>\\n  {:else if isResultsVisible && searchTerm.length >= 2}\\n    <div class=\\"search-results\\" transition:fade={{ duration: 200 }}>\\n      <p class=\\"no-results\\">No results found for \\"{searchTerm}\\"</p>\\n    </div>\\n  {/if}\\n</div>\\n\\n<style>\\n  .search-container {\\n    position: relative;\\n    width: 100%;\\n    max-width: 600px;\\n    margin: 0 auto;\\n  }\\n  \\n  .search-box {\\n    display: flex;\\n    align-items: center;\\n    background-color: white;\\n    border: 2px solid var(--gold-primary);\\n    border-radius: var(--radius-md);\\n    overflow: hidden;\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  input {\\n    flex: 1;\\n    padding: var(--space-2);\\n    border: none;\\n    outline: none;\\n    font-size: 1rem;\\n    font-family: var(--font-body);\\n  }\\n  \\n  .search-button {\\n    background-color: var(--gold-primary);\\n    color: var(--dark);\\n    padding: var(--space-2);\\n    border: none;\\n    cursor: pointer;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n  \\n  .search-results {\\n    position: absolute;\\n    top: 100%;\\n    left: 0;\\n    width: 100%;\\n    background-color: white;\\n    border: 2px solid var(--gold-dark);\\n    border-top: none;\\n    border-radius: 0 0 var(--radius-md) var(--radius-md);\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n    z-index: 10;\\n    max-height: 400px;\\n    overflow-y: auto;\\n  }\\n  \\n  .search-results ul {\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  \\n  .result-item {\\n    display: flex;\\n    align-items: center;\\n    padding: var(--space-2);\\n    border-bottom: 1px solid var(--gray-light);\\n    width: 100%;\\n    text-align: left;\\n    background: none;\\n    cursor: pointer;\\n    transition: background-color var(--transition-fast);\\n  }\\n  \\n  .result-item:hover {\\n    background-color: var(--gold-light);\\n  }\\n  \\n  .result-image {\\n    width: 60px;\\n    height: 60px;\\n    object-fit: cover;\\n    border-radius: var(--radius-sm);\\n    margin-right: var(--space-2);\\n  }\\n  \\n  .result-content {\\n    flex: 1;\\n  }\\n  \\n  .result-content h4 {\\n    margin: 0 0 4px;\\n    font-size: 1rem;\\n  }\\n  \\n  .result-content p {\\n    margin: 0;\\n    font-size: 0.9rem;\\n    color: var(--gray);\\n  }\\n  \\n  .no-results {\\n    padding: var(--space-2);\\n    text-align: center;\\n    color: var(--gray);\\n  }\\n</style>"],"names":[],"mappings":"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"}'
};
const SearchBar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let searchTerm = "";
  let searchInput;
  $$result.css.add(css);
  return `<div class="search-container svelte-1cp2z2g"><div class="search-box svelte-1cp2z2g"><input type="text" placeholder="Search historic infrastructures..." aria-label="Search infrastructures" class="svelte-1cp2z2g"${add_attribute("this", searchInput, 0)}${add_attribute("value", searchTerm, 0)}> <button class="search-button svelte-1cp2z2g" aria-label="Search" data-svelte-h="svelte-2cvlbh"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg></button></div> ${`${``}`} </div>`;
});
export {
  SearchBar as S
};
